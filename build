#!/usr/bin/env python3

import os, sys, subprocess, json

def shell(command):
	print(command)
	subprocess.Popen(command, shell=True).wait()

command = sys.argv[1] if len(sys.argv) > 1 else 'graphic'

src = [
	'main.cc',
	'hello_window.cc',
	'glad.c'
]

if command == 'graphic':
	shell('x86_64-w64-mingw32-c++-posix -std=c++17 -Iinclude {} -Llib -lglfw3 -lgdi32 -static-libstdc++ -static -lpthread -o graphic'.format(' '.join(src)))
	try:
		os.renames('graphic.exe', 'graphic')
	except:
		pass

if command == 'compile':
	cwd = os.getcwd()
	compile = []
	for file in src:
		compile.append({
			'directory': cwd,
			'arguments': ['-std=c++17', '-Iinclude'],
			'file': file
		})
	compile = json.dumps(compile, indent='\t')
	with open('compile_commands.json', 'w') as file:
		print(compile, file=file)
	print(compile)

if command == 'clean':
	shell('rm -f graphic')

if command == 'reset':
	shell('rm -f compile_commands.json')
	shell('rm -rf .cache')
